Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> var_declaration
Rule 4     statement -> expression SEMICOLON
Rule 5     statement -> if_statement
Rule 6     statement -> while_loop
Rule 7     statement -> for_loop
Rule 8     statement -> function_definition
Rule 9     var_declaration -> VAR ID ASSIGN expression
Rule 10    var_declaration -> VAR ID COLON type ASSIGN expression
Rule 11    type -> int
Rule 12    type -> float
Rule 13    type -> char
Rule 14    type -> double
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression TIMES expression
Rule 18    expression -> expression DIVIDE expression
Rule 19    expression -> expression LESSTHAN expression
Rule 20    expression -> expression GREATERTHAN expression
Rule 21    expression -> expression EQUALS expression
Rule 22    expression -> LPAREN expression RPAREN
Rule 23    expression -> INT
Rule 24    expression -> FLOAT
Rule 25    expression -> STRING
Rule 26    expression -> ID
Rule 27    if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 28    if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 29    for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
Rule 30    while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE
Rule 31    function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE

Terminals, with rules where they appear

ASSIGN               : 9 10
COLON                : 10
DIVIDE               : 18
ELSE                 : 28
EQUALS               : 21
FLOAT                : 24
FOR                  : 29
FUN                  : 31
GREATERTHAN          : 20
ID                   : 9 10 26 31
IF                   : 27 28
INT                  : 23
LBRACE               : 27 28 28 29 30 31
LESSTHAN             : 19
LPAREN               : 22 27 28 29 30 31
MINUS                : 16
PLUS                 : 15
RBRACE               : 27 28 28 29 30 31
RPAREN               : 22 27 28 29 30 31
SEMICOLON            : 4 29 29
STRING               : 25
TIMES                : 17
VAR                  : 9 10
WHILE                : 30
char                 : 13
double               : 14
error                : 
float                : 12
int                  : 11

Nonterminals, with rules where they appear

expression           : 4 9 10 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 27 28 29 29 30
for_loop             : 7
function_definition  : 8
if_statement         : 5
program              : 2 27 28 28 29 30 31 0
statement            : 1 2
type                 : 10
var_declaration      : 3 29
while_loop           : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    program                        shift and go to state 1
    statement                      shift and go to state 2
    var_declaration                shift and go to state 3
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    statement                      shift and go to state 19
    var_declaration                shift and go to state 3
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 2

    (1) program -> statement .

    VAR             reduce using rule 1 (program -> statement .)
    LPAREN          reduce using rule 1 (program -> statement .)
    INT             reduce using rule 1 (program -> statement .)
    FLOAT           reduce using rule 1 (program -> statement .)
    STRING          reduce using rule 1 (program -> statement .)
    ID              reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    FUN             reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)
    RBRACE          reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> var_declaration .

    VAR             reduce using rule 3 (statement -> var_declaration .)
    LPAREN          reduce using rule 3 (statement -> var_declaration .)
    INT             reduce using rule 3 (statement -> var_declaration .)
    FLOAT           reduce using rule 3 (statement -> var_declaration .)
    STRING          reduce using rule 3 (statement -> var_declaration .)
    ID              reduce using rule 3 (statement -> var_declaration .)
    IF              reduce using rule 3 (statement -> var_declaration .)
    WHILE           reduce using rule 3 (statement -> var_declaration .)
    FOR             reduce using rule 3 (statement -> var_declaration .)
    FUN             reduce using rule 3 (statement -> var_declaration .)
    $end            reduce using rule 3 (statement -> var_declaration .)
    RBRACE          reduce using rule 3 (statement -> var_declaration .)


state 4

    (4) statement -> expression . SEMICOLON
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27


state 5

    (5) statement -> if_statement .

    VAR             reduce using rule 5 (statement -> if_statement .)
    LPAREN          reduce using rule 5 (statement -> if_statement .)
    INT             reduce using rule 5 (statement -> if_statement .)
    FLOAT           reduce using rule 5 (statement -> if_statement .)
    STRING          reduce using rule 5 (statement -> if_statement .)
    ID              reduce using rule 5 (statement -> if_statement .)
    IF              reduce using rule 5 (statement -> if_statement .)
    WHILE           reduce using rule 5 (statement -> if_statement .)
    FOR             reduce using rule 5 (statement -> if_statement .)
    FUN             reduce using rule 5 (statement -> if_statement .)
    $end            reduce using rule 5 (statement -> if_statement .)
    RBRACE          reduce using rule 5 (statement -> if_statement .)


state 6

    (6) statement -> while_loop .

    VAR             reduce using rule 6 (statement -> while_loop .)
    LPAREN          reduce using rule 6 (statement -> while_loop .)
    INT             reduce using rule 6 (statement -> while_loop .)
    FLOAT           reduce using rule 6 (statement -> while_loop .)
    STRING          reduce using rule 6 (statement -> while_loop .)
    ID              reduce using rule 6 (statement -> while_loop .)
    IF              reduce using rule 6 (statement -> while_loop .)
    WHILE           reduce using rule 6 (statement -> while_loop .)
    FOR             reduce using rule 6 (statement -> while_loop .)
    FUN             reduce using rule 6 (statement -> while_loop .)
    $end            reduce using rule 6 (statement -> while_loop .)
    RBRACE          reduce using rule 6 (statement -> while_loop .)


state 7

    (7) statement -> for_loop .

    VAR             reduce using rule 7 (statement -> for_loop .)
    LPAREN          reduce using rule 7 (statement -> for_loop .)
    INT             reduce using rule 7 (statement -> for_loop .)
    FLOAT           reduce using rule 7 (statement -> for_loop .)
    STRING          reduce using rule 7 (statement -> for_loop .)
    ID              reduce using rule 7 (statement -> for_loop .)
    IF              reduce using rule 7 (statement -> for_loop .)
    WHILE           reduce using rule 7 (statement -> for_loop .)
    FOR             reduce using rule 7 (statement -> for_loop .)
    FUN             reduce using rule 7 (statement -> for_loop .)
    $end            reduce using rule 7 (statement -> for_loop .)
    RBRACE          reduce using rule 7 (statement -> for_loop .)


state 8

    (8) statement -> function_definition .

    VAR             reduce using rule 8 (statement -> function_definition .)
    LPAREN          reduce using rule 8 (statement -> function_definition .)
    INT             reduce using rule 8 (statement -> function_definition .)
    FLOAT           reduce using rule 8 (statement -> function_definition .)
    STRING          reduce using rule 8 (statement -> function_definition .)
    ID              reduce using rule 8 (statement -> function_definition .)
    IF              reduce using rule 8 (statement -> function_definition .)
    WHILE           reduce using rule 8 (statement -> function_definition .)
    FOR             reduce using rule 8 (statement -> function_definition .)
    FUN             reduce using rule 8 (statement -> function_definition .)
    $end            reduce using rule 8 (statement -> function_definition .)
    RBRACE          reduce using rule 8 (statement -> function_definition .)


state 9

    (9) var_declaration -> VAR . ID ASSIGN expression
    (10) var_declaration -> VAR . ID COLON type ASSIGN expression

    ID              shift and go to state 28


state 10

    (26) expression -> ID .

    SEMICOLON       reduce using rule 26 (expression -> ID .)
    PLUS            reduce using rule 26 (expression -> ID .)
    MINUS           reduce using rule 26 (expression -> ID .)
    TIMES           reduce using rule 26 (expression -> ID .)
    DIVIDE          reduce using rule 26 (expression -> ID .)
    LESSTHAN        reduce using rule 26 (expression -> ID .)
    GREATERTHAN     reduce using rule 26 (expression -> ID .)
    EQUALS          reduce using rule 26 (expression -> ID .)
    RPAREN          reduce using rule 26 (expression -> ID .)
    VAR             reduce using rule 26 (expression -> ID .)
    LPAREN          reduce using rule 26 (expression -> ID .)
    INT             reduce using rule 26 (expression -> ID .)
    FLOAT           reduce using rule 26 (expression -> ID .)
    STRING          reduce using rule 26 (expression -> ID .)
    ID              reduce using rule 26 (expression -> ID .)
    IF              reduce using rule 26 (expression -> ID .)
    WHILE           reduce using rule 26 (expression -> ID .)
    FOR             reduce using rule 26 (expression -> ID .)
    FUN             reduce using rule 26 (expression -> ID .)
    $end            reduce using rule 26 (expression -> ID .)
    RBRACE          reduce using rule 26 (expression -> ID .)


state 11

    (22) expression -> LPAREN . expression RPAREN
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 29

state 12

    (23) expression -> INT .

    SEMICOLON       reduce using rule 23 (expression -> INT .)
    PLUS            reduce using rule 23 (expression -> INT .)
    MINUS           reduce using rule 23 (expression -> INT .)
    TIMES           reduce using rule 23 (expression -> INT .)
    DIVIDE          reduce using rule 23 (expression -> INT .)
    LESSTHAN        reduce using rule 23 (expression -> INT .)
    GREATERTHAN     reduce using rule 23 (expression -> INT .)
    EQUALS          reduce using rule 23 (expression -> INT .)
    RPAREN          reduce using rule 23 (expression -> INT .)
    VAR             reduce using rule 23 (expression -> INT .)
    LPAREN          reduce using rule 23 (expression -> INT .)
    INT             reduce using rule 23 (expression -> INT .)
    FLOAT           reduce using rule 23 (expression -> INT .)
    STRING          reduce using rule 23 (expression -> INT .)
    ID              reduce using rule 23 (expression -> INT .)
    IF              reduce using rule 23 (expression -> INT .)
    WHILE           reduce using rule 23 (expression -> INT .)
    FOR             reduce using rule 23 (expression -> INT .)
    FUN             reduce using rule 23 (expression -> INT .)
    $end            reduce using rule 23 (expression -> INT .)
    RBRACE          reduce using rule 23 (expression -> INT .)


state 13

    (24) expression -> FLOAT .

    SEMICOLON       reduce using rule 24 (expression -> FLOAT .)
    PLUS            reduce using rule 24 (expression -> FLOAT .)
    MINUS           reduce using rule 24 (expression -> FLOAT .)
    TIMES           reduce using rule 24 (expression -> FLOAT .)
    DIVIDE          reduce using rule 24 (expression -> FLOAT .)
    LESSTHAN        reduce using rule 24 (expression -> FLOAT .)
    GREATERTHAN     reduce using rule 24 (expression -> FLOAT .)
    EQUALS          reduce using rule 24 (expression -> FLOAT .)
    RPAREN          reduce using rule 24 (expression -> FLOAT .)
    VAR             reduce using rule 24 (expression -> FLOAT .)
    LPAREN          reduce using rule 24 (expression -> FLOAT .)
    INT             reduce using rule 24 (expression -> FLOAT .)
    FLOAT           reduce using rule 24 (expression -> FLOAT .)
    STRING          reduce using rule 24 (expression -> FLOAT .)
    ID              reduce using rule 24 (expression -> FLOAT .)
    IF              reduce using rule 24 (expression -> FLOAT .)
    WHILE           reduce using rule 24 (expression -> FLOAT .)
    FOR             reduce using rule 24 (expression -> FLOAT .)
    FUN             reduce using rule 24 (expression -> FLOAT .)
    $end            reduce using rule 24 (expression -> FLOAT .)
    RBRACE          reduce using rule 24 (expression -> FLOAT .)


state 14

    (25) expression -> STRING .

    SEMICOLON       reduce using rule 25 (expression -> STRING .)
    PLUS            reduce using rule 25 (expression -> STRING .)
    MINUS           reduce using rule 25 (expression -> STRING .)
    TIMES           reduce using rule 25 (expression -> STRING .)
    DIVIDE          reduce using rule 25 (expression -> STRING .)
    LESSTHAN        reduce using rule 25 (expression -> STRING .)
    GREATERTHAN     reduce using rule 25 (expression -> STRING .)
    EQUALS          reduce using rule 25 (expression -> STRING .)
    RPAREN          reduce using rule 25 (expression -> STRING .)
    VAR             reduce using rule 25 (expression -> STRING .)
    LPAREN          reduce using rule 25 (expression -> STRING .)
    INT             reduce using rule 25 (expression -> STRING .)
    FLOAT           reduce using rule 25 (expression -> STRING .)
    STRING          reduce using rule 25 (expression -> STRING .)
    ID              reduce using rule 25 (expression -> STRING .)
    IF              reduce using rule 25 (expression -> STRING .)
    WHILE           reduce using rule 25 (expression -> STRING .)
    FOR             reduce using rule 25 (expression -> STRING .)
    FUN             reduce using rule 25 (expression -> STRING .)
    $end            reduce using rule 25 (expression -> STRING .)
    RBRACE          reduce using rule 25 (expression -> STRING .)


state 15

    (27) if_statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 30


state 16

    (30) while_loop -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 31


state 17

    (29) for_loop -> FOR . LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 32


state 18

    (31) function_definition -> FUN . ID LPAREN RPAREN LBRACE program RBRACE

    ID              shift and go to state 33


state 19

    (2) program -> program statement .

    VAR             reduce using rule 2 (program -> program statement .)
    LPAREN          reduce using rule 2 (program -> program statement .)
    INT             reduce using rule 2 (program -> program statement .)
    FLOAT           reduce using rule 2 (program -> program statement .)
    STRING          reduce using rule 2 (program -> program statement .)
    ID              reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    FUN             reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)
    RBRACE          reduce using rule 2 (program -> program statement .)


state 20

    (4) statement -> expression SEMICOLON .

    VAR             reduce using rule 4 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> expression SEMICOLON .)
    INT             reduce using rule 4 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 4 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 4 (statement -> expression SEMICOLON .)
    ID              reduce using rule 4 (statement -> expression SEMICOLON .)
    IF              reduce using rule 4 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 4 (statement -> expression SEMICOLON .)
    FUN             reduce using rule 4 (statement -> expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> expression SEMICOLON .)


state 21

    (15) expression -> expression PLUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 34

state 22

    (16) expression -> expression MINUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 35

state 23

    (17) expression -> expression TIMES . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 36

state 24

    (18) expression -> expression DIVIDE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 37

state 25

    (19) expression -> expression LESSTHAN . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 38

state 26

    (20) expression -> expression GREATERTHAN . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 39

state 27

    (21) expression -> expression EQUALS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 40

state 28

    (9) var_declaration -> VAR ID . ASSIGN expression
    (10) var_declaration -> VAR ID . COLON type ASSIGN expression

    ASSIGN          shift and go to state 41
    COLON           shift and go to state 42


state 29

    (22) expression -> LPAREN expression . RPAREN
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 43
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27


state 30

    (27) if_statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (28) if_statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 44

state 31

    (30) while_loop -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 45

state 32

    (29) for_loop -> FOR LPAREN . var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression

    VAR             shift and go to state 9

    var_declaration                shift and go to state 46

state 33

    (31) function_definition -> FUN ID . LPAREN RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 47


state 34

    (15) expression -> expression PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    SEMICOLON       reduce using rule 15 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    VAR             reduce using rule 15 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    INT             reduce using rule 15 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 15 (expression -> expression PLUS expression .)
    STRING          reduce using rule 15 (expression -> expression PLUS expression .)
    ID              reduce using rule 15 (expression -> expression PLUS expression .)
    IF              reduce using rule 15 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 15 (expression -> expression PLUS expression .)
    FOR             reduce using rule 15 (expression -> expression PLUS expression .)
    FUN             reduce using rule 15 (expression -> expression PLUS expression .)
    $end            reduce using rule 15 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 15 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27

  ! PLUS            [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! LESSTHAN        [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 15 (expression -> expression PLUS expression .) ]


state 35

    (16) expression -> expression MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    SEMICOLON       reduce using rule 16 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    VAR             reduce using rule 16 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    INT             reduce using rule 16 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 16 (expression -> expression MINUS expression .)
    STRING          reduce using rule 16 (expression -> expression MINUS expression .)
    ID              reduce using rule 16 (expression -> expression MINUS expression .)
    IF              reduce using rule 16 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 16 (expression -> expression MINUS expression .)
    FOR             reduce using rule 16 (expression -> expression MINUS expression .)
    FUN             reduce using rule 16 (expression -> expression MINUS expression .)
    $end            reduce using rule 16 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 16 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27

  ! PLUS            [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! LESSTHAN        [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 16 (expression -> expression MINUS expression .) ]


state 36

    (17) expression -> expression TIMES expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    SEMICOLON       reduce using rule 17 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 17 (expression -> expression TIMES expression .)
    VAR             reduce using rule 17 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 17 (expression -> expression TIMES expression .)
    INT             reduce using rule 17 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 17 (expression -> expression TIMES expression .)
    STRING          reduce using rule 17 (expression -> expression TIMES expression .)
    ID              reduce using rule 17 (expression -> expression TIMES expression .)
    IF              reduce using rule 17 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 17 (expression -> expression TIMES expression .)
    FOR             reduce using rule 17 (expression -> expression TIMES expression .)
    FUN             reduce using rule 17 (expression -> expression TIMES expression .)
    $end            reduce using rule 17 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 17 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27

  ! PLUS            [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! LESSTHAN        [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! GREATERTHAN     [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 17 (expression -> expression TIMES expression .) ]


state 37

    (18) expression -> expression DIVIDE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    SEMICOLON       reduce using rule 18 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 18 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 18 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 18 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 18 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 18 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 18 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 18 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 18 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 18 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 18 (expression -> expression DIVIDE expression .)
    FUN             reduce using rule 18 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 18 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 18 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27

  ! PLUS            [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! LESSTHAN        [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! GREATERTHAN     [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]


state 38

    (19) expression -> expression LESSTHAN expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    SEMICOLON       reduce using rule 19 (expression -> expression LESSTHAN expression .)
    RPAREN          reduce using rule 19 (expression -> expression LESSTHAN expression .)
    VAR             reduce using rule 19 (expression -> expression LESSTHAN expression .)
    LPAREN          reduce using rule 19 (expression -> expression LESSTHAN expression .)
    INT             reduce using rule 19 (expression -> expression LESSTHAN expression .)
    FLOAT           reduce using rule 19 (expression -> expression LESSTHAN expression .)
    STRING          reduce using rule 19 (expression -> expression LESSTHAN expression .)
    ID              reduce using rule 19 (expression -> expression LESSTHAN expression .)
    IF              reduce using rule 19 (expression -> expression LESSTHAN expression .)
    WHILE           reduce using rule 19 (expression -> expression LESSTHAN expression .)
    FOR             reduce using rule 19 (expression -> expression LESSTHAN expression .)
    FUN             reduce using rule 19 (expression -> expression LESSTHAN expression .)
    $end            reduce using rule 19 (expression -> expression LESSTHAN expression .)
    RBRACE          reduce using rule 19 (expression -> expression LESSTHAN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27

  ! PLUS            [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! EQUALS          [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]


state 39

    (20) expression -> expression GREATERTHAN expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    SEMICOLON       reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    RPAREN          reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    VAR             reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    LPAREN          reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    INT             reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    FLOAT           reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    STRING          reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    ID              reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    IF              reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    WHILE           reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    FOR             reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    FUN             reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    $end            reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    RBRACE          reduce using rule 20 (expression -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27

  ! PLUS            [ reduce using rule 20 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression GREATERTHAN expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 20 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 20 (expression -> expression GREATERTHAN expression .) ]
  ! EQUALS          [ reduce using rule 20 (expression -> expression GREATERTHAN expression .) ]


state 40

    (21) expression -> expression EQUALS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    SEMICOLON       reduce using rule 21 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 21 (expression -> expression EQUALS expression .)
    VAR             reduce using rule 21 (expression -> expression EQUALS expression .)
    LPAREN          reduce using rule 21 (expression -> expression EQUALS expression .)
    INT             reduce using rule 21 (expression -> expression EQUALS expression .)
    FLOAT           reduce using rule 21 (expression -> expression EQUALS expression .)
    STRING          reduce using rule 21 (expression -> expression EQUALS expression .)
    ID              reduce using rule 21 (expression -> expression EQUALS expression .)
    IF              reduce using rule 21 (expression -> expression EQUALS expression .)
    WHILE           reduce using rule 21 (expression -> expression EQUALS expression .)
    FOR             reduce using rule 21 (expression -> expression EQUALS expression .)
    FUN             reduce using rule 21 (expression -> expression EQUALS expression .)
    $end            reduce using rule 21 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 21 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27

  ! PLUS            [ reduce using rule 21 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression EQUALS expression .) ]
  ! LESSTHAN        [ reduce using rule 21 (expression -> expression EQUALS expression .) ]
  ! GREATERTHAN     [ reduce using rule 21 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 21 (expression -> expression EQUALS expression .) ]


state 41

    (9) var_declaration -> VAR ID ASSIGN . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 48

state 42

    (10) var_declaration -> VAR ID COLON . type ASSIGN expression
    (11) type -> . int
    (12) type -> . float
    (13) type -> . char
    (14) type -> . double

    int             shift and go to state 50
    float           shift and go to state 51
    char            shift and go to state 52
    double          shift and go to state 53

    type                           shift and go to state 49

state 43

    (22) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    INT             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    FUN             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)


state 44

    (27) if_statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (28) if_statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27


state 45

    (30) while_loop -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 55
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27


state 46

    (29) for_loop -> FOR LPAREN var_declaration . SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE

    SEMICOLON       shift and go to state 56


state 47

    (31) function_definition -> FUN ID LPAREN . RPAREN LBRACE program RBRACE

    RPAREN          shift and go to state 57


state 48

    (9) var_declaration -> VAR ID ASSIGN expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

    VAR             reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    LPAREN          reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    INT             reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    FLOAT           reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    STRING          reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    ID              reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    IF              reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    WHILE           reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    FOR             reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    FUN             reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    $end            reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    SEMICOLON       reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    RBRACE          reduce using rule 9 (var_declaration -> VAR ID ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27


state 49

    (10) var_declaration -> VAR ID COLON type . ASSIGN expression

    ASSIGN          shift and go to state 58


state 50

    (11) type -> int .

    ASSIGN          reduce using rule 11 (type -> int .)


state 51

    (12) type -> float .

    ASSIGN          reduce using rule 12 (type -> float .)


state 52

    (13) type -> char .

    ASSIGN          reduce using rule 13 (type -> char .)


state 53

    (14) type -> double .

    ASSIGN          reduce using rule 14 (type -> double .)


state 54

    (27) if_statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (28) if_statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 59


state 55

    (30) while_loop -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 60


state 56

    (29) for_loop -> FOR LPAREN var_declaration SEMICOLON . expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 61

state 57

    (31) function_definition -> FUN ID LPAREN RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 62


state 58

    (10) var_declaration -> VAR ID COLON type ASSIGN . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 63

state 59

    (27) if_statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (28) if_statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    expression                     shift and go to state 4
    program                        shift and go to state 64
    statement                      shift and go to state 2
    var_declaration                shift and go to state 3
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 60

    (30) while_loop -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    expression                     shift and go to state 4
    program                        shift and go to state 65
    statement                      shift and go to state 2
    var_declaration                shift and go to state 3
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 61

    (29) for_loop -> FOR LPAREN var_declaration SEMICOLON expression . SEMICOLON expression RPAREN LBRACE program RBRACE
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 66
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27


state 62

    (31) function_definition -> FUN ID LPAREN RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    program                        shift and go to state 67
    statement                      shift and go to state 2
    var_declaration                shift and go to state 3
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 63

    (10) var_declaration -> VAR ID COLON type ASSIGN expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

    VAR             reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    LPAREN          reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    INT             reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    FLOAT           reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    STRING          reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    ID              reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    IF              reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    WHILE           reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    FOR             reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    FUN             reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    $end            reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    SEMICOLON       reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    RBRACE          reduce using rule 10 (var_declaration -> VAR ID COLON type ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27


state 64

    (27) if_statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (28) if_statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE
    (2) program -> program . statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    RBRACE          shift and go to state 68
    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    expression                     shift and go to state 4
    statement                      shift and go to state 19
    var_declaration                shift and go to state 3
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 65

    (30) while_loop -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    RBRACE          shift and go to state 69
    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    expression                     shift and go to state 4
    statement                      shift and go to state 19
    var_declaration                shift and go to state 3
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 66

    (29) for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON . expression RPAREN LBRACE program RBRACE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10

    expression                     shift and go to state 70

state 67

    (31) function_definition -> FUN ID LPAREN RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    RBRACE          shift and go to state 71
    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    statement                      shift and go to state 19
    var_declaration                shift and go to state 3
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 68

    (27) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (28) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    VAR             reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    STRING          reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FUN             reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 72


state 69

    (30) while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    VAR             reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    STRING          reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FUN             reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 30 (while_loop -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 70

    (29) for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression . RPAREN LBRACE program RBRACE
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATERTHAN expression
    (21) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 73
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    LESSTHAN        shift and go to state 25
    GREATERTHAN     shift and go to state 26
    EQUALS          shift and go to state 27


state 71

    (31) function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .

    VAR             reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    STRING          reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    FUN             reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 31 (function_definition -> FUN ID LPAREN RPAREN LBRACE program RBRACE .)


state 72

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 74


state 73

    (29) for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 75


state 74

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    expression                     shift and go to state 4
    program                        shift and go to state 76
    statement                      shift and go to state 2
    var_declaration                shift and go to state 3
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 75

    (29) for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    var_declaration                shift and go to state 3
    expression                     shift and go to state 4
    program                        shift and go to state 77
    statement                      shift and go to state 2
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 76

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    RBRACE          shift and go to state 78
    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    expression                     shift and go to state 4
    statement                      shift and go to state 19
    var_declaration                shift and go to state 3
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 77

    (29) for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . var_declaration
    (4) statement -> . expression SEMICOLON
    (5) statement -> . if_statement
    (6) statement -> . while_loop
    (7) statement -> . for_loop
    (8) statement -> . function_definition
    (9) var_declaration -> . VAR ID ASSIGN expression
    (10) var_declaration -> . VAR ID COLON type ASSIGN expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATERTHAN expression
    (21) expression -> . expression EQUALS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . STRING
    (26) expression -> . ID
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (28) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (30) while_loop -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (29) for_loop -> . FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE
    (31) function_definition -> . FUN ID LPAREN RPAREN LBRACE program RBRACE

    RBRACE          shift and go to state 79
    VAR             shift and go to state 9
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 10
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUN             shift and go to state 18

    var_declaration                shift and go to state 3
    expression                     shift and go to state 4
    statement                      shift and go to state 19
    if_statement                   shift and go to state 5
    while_loop                     shift and go to state 6
    for_loop                       shift and go to state 7
    function_definition            shift and go to state 8

state 78

    (28) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    VAR             reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    LPAREN          reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    INT             reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FLOAT           reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    STRING          reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    ID              reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IF              reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FOR             reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FUN             reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 28 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)


state 79

    (29) for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .

    VAR             reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    STRING          reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    FUN             reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 29 (for_loop -> FOR LPAREN var_declaration SEMICOLON expression SEMICOLON expression RPAREN LBRACE program RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 34 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 34 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 35 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 35 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 35 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 35 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 36 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 36 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 37 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 37 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 37 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 37 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 38 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 38 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 38 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 38 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 39 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 39 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 40 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 40 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 40 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 40 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 40 resolved as shift
